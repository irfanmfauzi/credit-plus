// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"
	repository "credit-plus/internal/repository"

	mock "github.com/stretchr/testify/mock"

	request "credit-plus/internal/model/request"
)

// InstallmentRepository is an autogenerated mock type for the InstallmentRepository type
type InstallmentRepository struct {
	mock.Mock
}

// BulkInsertInstallment provides a mock function with given fields: ctx, tx, req
func (_m *InstallmentRepository) BulkInsertInstallment(ctx context.Context, tx repository.TxProvider, req []request.CreateCustomerInstallmentRequest) error {
	ret := _m.Called(ctx, tx, req)

	if len(ret) == 0 {
		panic("no return value specified for BulkInsertInstallment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, repository.TxProvider, []request.CreateCustomerInstallmentRequest) error); ok {
		r0 = rf(ctx, tx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewInstallmentRepository creates a new instance of InstallmentRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInstallmentRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *InstallmentRepository {
	mock := &InstallmentRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
